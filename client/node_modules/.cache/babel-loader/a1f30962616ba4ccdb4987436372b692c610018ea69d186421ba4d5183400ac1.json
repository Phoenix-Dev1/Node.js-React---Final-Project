{"ast":null,"code":"var _jsxFileName = \"C:\\\\NodeReact - Final Project\\\\030623\\\\NodeReact\\\\client\\\\src\\\\context\\\\authContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Used to wrap the Application with the user id and requests\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(\n  // Check if a user is logged in\n  JSON.parse(localStorage.getItem('user')) || null);\n\n  // State for registration completion\n  const [registrationComplete, setRegistrationComplete] = useState(false);\n\n  // Logged in context\n  const login = async inputs => {\n    const res = await axios.post('/auth/login', inputs);\n    setCurrentUser(res.data);\n  };\n  const registered = async inputs => {\n    const res = await axios.post('/auth/register', inputs);\n    login(inputs);\n    setRegistrationComplete(true);\n    setCurrentUser(res.data);\n  };\n\n  // Logged out context\n  const logout = async () => {\n    try {\n      await axios.get('/auth/logout');\n      //setCurrentUser(null);\n      //localStorage.clear(); // Clear the local storage\n      //window.location.href = '/'; // Redirect to home page\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    localStorage.setItem('user', JSON.stringify(currentUser));\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      login,\n      registered,\n      registrationComplete,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"Eqewb6knWI2/+uknegPyeOTZtP8=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","_ref","_s","children","currentUser","setCurrentUser","JSON","parse","localStorage","getItem","registrationComplete","setRegistrationComplete","login","inputs","res","post","data","registered","logout","get","error","console","log","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/NodeReact - Final Project/030623/NodeReact/client/src/context/authContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nexport const AuthContext = createContext();\r\n\r\n// Used to wrap the Application with the user id and requests\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(\r\n    // Check if a user is logged in\r\n    JSON.parse(localStorage.getItem('user')) || null\r\n  );\r\n\r\n  // State for registration completion\r\n  const [registrationComplete, setRegistrationComplete] = useState(false);\r\n\r\n  // Logged in context\r\n  const login = async (inputs) => {\r\n    const res = await axios.post('/auth/login', inputs);\r\n    setCurrentUser(res.data);\r\n  };\r\n\r\n  const registered = async (inputs) => {\r\n    const res = await axios.post('/auth/register', inputs);\r\n    login(inputs);\r\n    setRegistrationComplete(true);\r\n    setCurrentUser(res.data);\r\n  };\r\n\r\n  // Logged out context\r\n  const logout = async () => {\r\n    try {\r\n      await axios.get('/auth/logout');\r\n      //setCurrentUser(null);\r\n      //localStorage.clear(); // Clear the local storage\r\n      //window.location.href = '/'; // Redirect to home page\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('user', JSON.stringify(currentUser));\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ currentUser, login, registered, registrationComplete, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMO,mBAAmB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC9C,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ;EAC5C;EACAW,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAC9C,CAAC;;EAED;EACA,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAEvE;EACA,MAAMiB,KAAK,GAAG,MAAOC,MAAM,IAAK;IAC9B,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,aAAa,EAAEF,MAAM,CAAC;IACnDR,cAAc,CAACS,GAAG,CAACE,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOJ,MAAM,IAAK;IACnC,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,gBAAgB,EAAEF,MAAM,CAAC;IACtDD,KAAK,CAACC,MAAM,CAAC;IACbF,uBAAuB,CAAC,IAAI,CAAC;IAC7BN,cAAc,CAACS,GAAG,CAACE,IAAI,CAAC;EAC1B,CAAC;;EAED;EACA,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMtB,KAAK,CAACuB,GAAG,CAAC,cAAc,CAAC;MAC/B;MACA;MACA;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED1B,SAAS,CAAC,MAAM;IACdc,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEjB,IAAI,CAACkB,SAAS,CAACpB,WAAW,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACEN,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IACnBC,KAAK,EAAE;MAAEtB,WAAW;MAAEQ,KAAK;MAAEK,UAAU;MAAEP,oBAAoB;MAAEQ;IAAO,CAAE;IAAAf,QAAA,EAEvEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CA7CWF,mBAAmB;AAAA+B,EAAA,GAAnB/B,mBAAmB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}